program       -> statement* ;
statement     -> ( expression | if ) ";" ;
if            -> ( expression | body ) if_unless ;
if_unless     -> "unless" expression if_than? ;
if_than       -> "than" ( expression | body ) if_unless? ;
body          -> "{" statement* "}" ;

expression    -> equality ;
equality      -> comparison ( ( "!=" | "==" ) comparison )* ;
comparison    -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term          -> factor ( ( "-" | "+" ) factor )* ;
factor        -> unary ( ( "/" | "*" ) unary )* ;
unary         -> ( "!" | "-" ) unary | primary ;
primary       -> num+ | identifier | "true" | "false" | "none"
               | "(" expression ")" | call | exprif ;
exprif        -> expression ( "unless" expression "than" expression )+ ;
call          -> identifier "(" expression ( "," expression )* ")"
               | identifier "()" ;

identifier    -> char ( char | num )* ;
char          -> [a-z] | [A-Z] | [\d] ;
num           -> [0-9] ;
